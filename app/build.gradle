import com.android.ddmlib.DdmPreferences

import java.security.InvalidParameterException

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "tech.pauly.findapet"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 100
        versionName "1.0.0"
        DdmPreferences.setTimeOut(60000)
        testInstrumentationRunner "tech.pauly.findapet.EspressoTestRunner"
        testInstrumentationRunnerArguments disableAnalytics: 'true'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            String environment = project.property("findapet.environment")
            if (environment != "prod" && environment != "espresso") {
                throw new InvalidParameterException("Invalid environment property '${environment}'\n" +
                        "Valid environments are prod and espresso.")
            }
            buildConfigField "String", "ENVIRONMENT", "\"${environment}\""

            String apiKey = project.property("findapet.petfinder.apikey")
            buildConfigField "String", "API_KEY", "\"${apiKey}\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    aaptOptions {
        cruncherEnabled false
    }

    sourceSets {
        androidTest {
            setRoot "src/androidTest"
            res.srcDir "src/androidTest/res"
        }
    }

    testOptions {
        animationsDisabled = true
        unitTests.returnDefaultValues = true
    }
}

project.afterEvaluate {
    def allTasks = getGradle().getStartParameter().getTaskRequests().toString()
    if (allTasks.contains("AndroidTest")
            && !allTasks.contains("generate")
            && project.property("findapet.environment") != "espresso") {
        throw new InvalidParameterException("You're trying to run espresso tests but haven't set your environment to espresso.")
    }
    if (!allTasks.contains("AndroidTest")
            && allTasks.toString() != "[]"
            && project.property("findapet.environment") == "espresso") {
        throw new InvalidParameterException("You're trying to run the app but you've set your environment to espresso.")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt "com.android.databinding:compiler:3.1.3"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.2.50"

    //Support Library
    def supportLibraryVersion = '27.1.1'
    implementation "com.android.support:appcompat-v7:${supportLibraryVersion}"
    implementation "com.android.support:design:${supportLibraryVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${supportLibraryVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    //Play Services
    def playServicesVersion = '15.0.1'
    implementation "com.google.android.gms:play-services-maps:${playServicesVersion}"
    implementation "com.google.android.gms:play-services-location:${playServicesVersion}"

    //Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'jp.wasabeef:picasso-transformations:2.2.1'

    //LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    //Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }

    //Architecture Components
    def room_version = "1.1.0"
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    //Dagger 2
    implementation 'com.google.dagger:dagger:2.14.1'
    kapt 'com.google.dagger:dagger-compiler:2.14.1'
    implementation 'com.google.dagger:dagger-android-support:2.14.1'
    kapt 'com.google.dagger:dagger-android-processor:2.14.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    //Rx
    implementation "io.reactivex.rxjava2:rxjava:2.1.13"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-simplexml:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    //Unit Tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.11.0'
    testImplementation('com.squareup.assertj:assertj-android:1.1.1') {
        exclude module: 'support-annotations'
    }
    testImplementation "android.arch.persistence.room:testing:$room_version"
    testImplementation 'com.nhaarman:mockito-kotlin:1.5.0'

    //Espresso Tests
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation('com.android.support.test:runner:1.0.0') {
        exclude module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:3.0.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-intents:3.0.0') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs'
    }
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.14.1'
    kaptAndroidTest 'com.google.dagger:dagger-android-processor:2.14.1'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.9.0'
}
